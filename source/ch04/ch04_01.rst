4.1 跨站请求伪造保护
====================

**跨站请求伪造（CSRF）：**\ 是一种挟制用户在当前已登录的 Web
应用程序上执行非本意的操作的攻击方法。

CSRF 攻击原理：

-  用户打开浏览器，访问受信任网站 A。登录成功后，网站 A 产生 Cookie
   信息并返回给浏览器。
-  用户未退出网站 A 之前，在同一浏览器中，打开一个页面访问网站 B。
-  网站 B
   接收到用户请求后，返回一些攻击性代码，并发出一个请求要求访问第三方站点A。
-  浏览器在接收到这些攻击性代码后，根据网站B的请求，在用户不知情的情况下携带
   Cookie 信息，向网站A发出请求。网站 A 并不知道该请求其实是由 B
   发起的，所以会根据用户的 Cookie 信息处理该请求，导致来自网站 B
   的恶意代码被执行。

在 Flask 中， Flask-WTF 可以保护表单免受跨站请求伪造攻击。为了实现 CSRF
保护，Flask-WTF 需要应用程序配置一个加密密钥。Flask-WTF
使用这个加密密钥去生成安全令牌存储在用户会话中，用于验证请求表单数据的真实性。

示例：在 Flask 应用中配置密钥

.. code:: python

   app = Flask(__name__)
   app.config['SECRET_KEY'] = 'hard to guess string'

app.config 字典可用来存储 Flask、扩展和程序自身的配置变量。
